
---------------------------------------Junit----------------------------

	junit is a unit testing framework , usefull to debug writen programms
	by developer..

	Why we are using junit framework in selenium:--->

	1. To optimize test case and Scripts
	2. By default Selenium doesn't have reporting option
	3. To execute programms without using main method
	
	To organize test method with in class we follow bellow annotations

		@Test
		@BeforeClass
		@AfterClass
		@Before
		@After
		@Ignore
----------------------------------------------------------------


Note:--> Inorder to work with junit framework add libraries to java project.

Add junit libraries to project:-->
		=>Open buildpath and  select --> configure buildpath
		=> Click add library and select junit library then click
	  	next  ==> after completed adding jar files click
		finish to close buildpath window...



Creating Junit Testcase:-->
Navigation to create junit testcase:-->

		right click on package----->New---> Junit Testcase
		---Enter ClassName---> Click On finish
		
---------------------------------------------------------------------------------


Annotations:---->

	Annotations organize method execution with in class, all
	annotations set for methods..
	


@Test:-->

	It enable method execution without using main method with in class

	syntax:-->
			@Test
			public void methodname()
			{

			}

------------------------------------------------------------------>

@beforeClass:-->

	Beforeclass annotated method execute , before first @Test annotated method
	 with in class


	syntax:-->
		@BeforeClass
		public static  void methodname() throws Exception
		{
			//usually we declare ,Variable and object - 							Inititaion under this method
		}

@AfterClass:--->

	AfterClass annotated method execute, After last @Test annotated method
	with in class

		@AfterClass
		public static  void methodname() throws Exception
		{

		}

@Before:-->

	Before annotated method is execute before each @Test method 
	with in  a class

	Note:--> When all test methods needed a same precondition

		@Before
		public void methodname() throws Exception
		{
		
		}


@After:-->

	After annotated method execute after each @Test method with in a class

	Note:--> When all test methods needed a same kind of post condition

		@After
		public void methodname() throws Exception
		{

		}


@Ignore:-->

	Ignore method execution
		@Ignore
		public void methodname()
		{
		
		}